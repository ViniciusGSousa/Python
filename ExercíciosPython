{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyP3iWBCz77oV3RIHOiIe+xW",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ViniciusGSousa/Python/blob/main/Exerc%C3%ADciosPython\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1 - área do quadrado"
      ],
      "metadata": {
        "id": "mbavlQp4vlQZ"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XiJv4LGSco01",
        "outputId": "721232d8-bb42-4b61-ed1f-75267cca6c5a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o número 3\n",
            "A área é: 9\n"
          ]
        }
      ],
      "source": [
        "Qlado = int(input(\"Digite o número: \"))\n",
        "Qarea = (Qlado*Qlado);\n",
        "print (\"A área é:\", Qarea);"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2 - salário com reajuste"
      ],
      "metadata": {
        "id": "WDoZgBw3vxQM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Sal = float(input(\"Digite seu salário: \"))\n",
        "Nsal = ((Sal*0.15) + Sal);\n",
        "print (\"Seu novo salário é: \", Nsal);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_WI8jS5Bc4Xk",
        "outputId": "ee307895-fe84-49ee-9474-d999514cc8a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite seu salário: 1000\n",
            "Seu novo salário é:  1150.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3 - área do triângulo"
      ],
      "metadata": {
        "id": "HQZ1DlDpv19U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Tbase = int(input(\"Digite a base do triângulo: \"));\n",
        "Taltura = int(input(\"Digite a altura do triângulo: \"));\n",
        "Tarea = ((Tbase*Taltura)/2);\n",
        "print (\"a área do triângulo é: \", Tarea);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4TL33hMugOZz",
        "outputId": "45d47b48-0010-4d14-ba18-637f8e29baf8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a base do triângulo: 5\n",
            "Digite a altura do triângulo: 5\n",
            "a área do triângulo é:  12.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "4 - Celsius para Fahrenheit"
      ],
      "metadata": {
        "id": "fgBKj_zWv8d_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "C = int(input(\"Digite a temperatura em C°: \"));\n",
        "F = ((9*C+160)/5);\n",
        "print (\"São\", F,\"° Fahrenheit\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l9s9kk1viM20",
        "outputId": "8db4a6f3-5863-4ffe-a947-31062d67ee63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a temperatura em C°: 30\n",
            "São 86.0 ° Fahrenheit\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "5 - equação de segundo grau"
      ],
      "metadata": {
        "id": "aXFakIESwCsI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a, b, c = int(input(\"Digite a: \")), int(input(\"Digite b: \")), int(input(\"Digite C: \"));\n",
        "C = ((b*b) - 4*a*c);\n",
        "import math\n",
        "if C > 0:\n",
        "  R1 = (-b + math.sqrt(C) / (2 * a));\n",
        "  R2 = (-b - math.sqrt(C) / (2 * a));\n",
        "  print (\"Raíz 1:\", R1, \"Raíz 2:\", R2);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HNsBOW6vjvK0",
        "outputId": "cfb53c6f-9641-4513-f11f-fca7dc59e3c1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a: 1\n",
            "Digite b: 5\n",
            "Digite C: 6\n",
            "Raíz 1: -4.5 Raíz 2: -5.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6 - troque o valor de X por Y"
      ],
      "metadata": {
        "id": "6DacYSe6wHd5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = float(input(\"Digite o valor de x: \")), int(input(\"Digite o valor de y: \"));\n",
        "z = (x);\n",
        "x = (y);\n",
        "y = (z);\n",
        "print (\"X =\", x, \", Y =\", y);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DAMUITw8uShA",
        "outputId": "6f84e042-6169-4f1c-daf2-055600b92e01"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o valor de x: 5\n",
            "Digite o valor de y: 1\n",
            "X = 1 , Y = 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "7 - volume do paralelepípedo"
      ],
      "metadata": {
        "id": "CO8_dWImwcXF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c, l, h = float(input(\"Digite o comprimeto: \")), int(input(\"Digite a largura: \")), int(input(\"Digite a altura: \"));\n",
        "v = (c * l * h);\n",
        "print (\"O volume é: \", v);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "98_dmfPJvk8x",
        "outputId": "ca8af9ea-eabc-4ebe-fd0b-d81d386f6ddf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o comprimeto: 20\n",
            "Digite a largura: 16\n",
            "Digite a altura: 25\n",
            "O volume é:  8000.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "8 - rendimento de depósito"
      ],
      "metadata": {
        "id": "khTreoDKxj0U"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Vdep, M = int(input(\"Digite o valor da poupança: \")), int(input(\"Digite a quantidade de meses: \"));\n",
        "Vt = ((Vdep * (M*0.0113)) + Vdep);\n",
        "print (\"Valor total: \", Vt);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fuqgom-zxg3r",
        "outputId": "8022cc87-f76a-4cf4-ee00-744012c83414"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o valor da poupança: 1000\n",
            "Digite a quantidade de meses: 1\n",
            "Valor total:  1013.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "9 - soma dos quadrados"
      ],
      "metadata": {
        "id": "8TlN-yW2zURE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = int(input(\"Digite um número: \")), int(input(\"Digite outro número: \"));\n",
        "S = ((x*x) + (y*y));\n",
        "print (\"A soma dos quadrados desses números é:\", S);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8_xXDSEbzap1",
        "outputId": "3ed419f0-8369-447f-9f4a-92da04408e00"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 2\n",
            "Digite outro número: 3\n",
            "A soma dos quadrados desses números é: 13\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "10 - diferença de números reais"
      ],
      "metadata": {
        "id": "mTBVXxsb1KRl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = float(input(\"Digite um número: \")), float(input(\"Digite outro número: \"));\n",
        "S = (x / y);\n",
        "print (\"A diferença entre esses números é:\", S);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w0YDeS7B1QU2",
        "outputId": "52b5458c-5ed3-4b4c-b32e-39c614106172"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 10\n",
            "Digite outro número: 2\n",
            "A diferença entre esses números é: 5.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "11 - comprimento da circunferência"
      ],
      "metadata": {
        "id": "gF7Z96wl1q4s"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "r = float(input(\"Digite o raio da circunferência: \"));\n",
        "C = ((2 * r) * 3.14);\n",
        "print (\"O comprimento é:\", C);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dhJcY4iJ10H-",
        "outputId": "99028ddb-735c-4bb6-f841-e9f8b73dcdaf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o raio da circunferência: 2\n",
            "O comprimento é: 12.56\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "12 - idade atual e daqui 17 anos"
      ],
      "metadata": {
        "id": "5D-ym73Z2-Ee"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "AnoN, AnoA = int(input(\"Digite o ano do seu nascimento: \")), int(input(\"Digite o ano atual: \"));\n",
        "I = ((AnoA - AnoN));\n",
        "S = (I + 17);\n",
        "print (\"Você tem\", I, \"anos e daqui 17 anos, terá:\", S);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BjaXE5873Ivv",
        "outputId": "a9b094af-b938-45ce-ddf1-efb6562c6410"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o ano do seu nascimento: 2005\n",
            "Digite o ano atual: 2025\n",
            "Você tem 20 anos e daqui 17 anos, terá: 37\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "13 - duração do alimento"
      ],
      "metadata": {
        "id": "WLuWJ3v74QmX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "kg = float(input(\"Digite quantos kg tem o alimento: \"));\n",
        "d = (kg / 0.05);\n",
        "print (\"Esse alimento irá durar:\", d, \"dias\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O13Rxcce4Vef",
        "outputId": "722eab86-018b-473c-e8d2-a010df4cea7b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite quantos kg tem o alimento: 1\n",
            "Esse alimento irá durar: 20.0 dias\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "14 - ângulo do triângulo"
      ],
      "metadata": {
        "id": "lHZ4RMFa5SQ9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a1, a2 = int(input(\"Digite o primeiro ângulo: \")), int(input(\"Digite o segundo ângulo: \"));\n",
        "a3 = (180 - (a1 + a2));\n",
        "print (\"O 3° ângulo vale:\", a3);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wTwBAh4N5aOw",
        "outputId": "32e1a833-6e0e-40d8-d6bd-981f0675c498"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o primeiro ângulo: 50\n",
            "Digite o segundo ângulo: 50\n",
            "O 3° ângulo vale: 80\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "15 - hipotenusa do triângulo"
      ],
      "metadata": {
        "id": "WwQ7aGUE6E1f"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c1, c2 = int(input(\"Digite o primeiro cateto: \")), int(input(\"Agora digite o segundo: \"));\n",
        "S = ((c1 * c1) + (c2 * c2));\n",
        "import math;\n",
        "h = (math.sqrt(S));\n",
        "print (\"a hipotenusa é:\", h);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QGcwpPUd6a81",
        "outputId": "8dc226c4-0a14-4c9e-ef4e-f802a2d64f62"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o primeiro cateto: 12\n",
            "Agora digite o segundo: 16\n",
            "a hipotenusa é: 20.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "16 - Salário"
      ],
      "metadata": {
        "id": "xQSpdN417fiL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Qhr, Vhr, Pdesc, Ndep = int(input(\"Digite quantas horas trabalhou: \")), int(input(\"Digite quanto recebe por hora: \")), int(input(\"Digite o percentual de desconto: \")), int(input(\"Digite quantos dependentes possui: \"));\n",
        "\n",
        "Sb = (Qhr * Vhr);\n",
        "Sd = (Sb - (S1b * (Pdesc / 100)));\n",
        "Sl = (Sd + (Ndep * 100));\n",
        "print (\"O salário a receber é:\", Sl, \"reais\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r2CMecz67mDc",
        "outputId": "8fb0ea91-1b86-4130-b202-c220f8bf9886"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite quantas horas trabalhou: 10\n",
            "Digite quanto recebe por hora: 100\n",
            "Digite o percentual de desconto: 10\n",
            "Digite quantos dependentes possui: 2\n",
            "O salário a receber é: 1100.0 reais\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "17 - Litros gastos na viagem"
      ],
      "metadata": {
        "id": "cocXngo39y1i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Tperc, Vm = int(input(\"Digite quanto tempo dura a viagem em minutos: \")), int(input(\"Digite a velocidade média do veículo: \"));\n",
        "\n",
        "L = ((Vm * (Tperc / 60))/12);\n",
        "print (\"Foram gastos:\", L, \"litros, nessa viagem\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ro5OSjqC9rCx",
        "outputId": "b6259864-423a-4218-ae40-2d7a8e13637b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite quanto tempo dura a viagem em minutos: 120\n",
            "Digite a velocidade média do veículo: 24\n",
            "Foram gastos: 4.0 litros, nessa viagem\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "18 - diferença do maior para o menor"
      ],
      "metadata": {
        "id": "0KRGJ_p9DKpp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = int(input(\"Digite um valor: \")), int(input(\"Digite outro valor: \"));\n",
        "\n",
        "if (x > y):\n",
        "  D = (x - y);\n",
        "else:\n",
        "  D = (y - x);\n",
        "print (\"A diferença do maior para o menor é:\", D);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XLY5ZAHBDTCr",
        "outputId": "50fe8bf9-5cd7-47ff-cb82-2f34f2eefe74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor: 2\n",
            "Digite outro valor: 20\n",
            "A diferença do maior para o menor é: 18\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "19 - maior valor real"
      ],
      "metadata": {
        "id": "G_vHUpsHEMnn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = int(input(\"Digite um valor: \")), int(input(\"Digite outro valor: \"));\n",
        "\n",
        "if (x > y):\n",
        "  print (\"O maior valor é:\", x);\n",
        "else:\n",
        "  print (\"O maior valor é:\", y);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-QigpRPHEL-P",
        "outputId": "c41d5655-0d83-4c01-fd5b-d7a5de5db1c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor: 2\n",
            "Digite outro valor: 10\n",
            "O maior valor é: 10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "20 - equação de segundo grau"
      ],
      "metadata": {
        "id": "Ny3HhB9YEoAs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a, b, c = int(input(\"Digite a: \")), int(input(\"Digite b: \")), int(input(\"Digite C: \"));\n",
        "\n",
        "C = ((b*b) - 4*a*c);\n",
        "import math\n",
        "if C > 0:\n",
        "  R1 = (-b + math.sqrt(C) / (2 * a));\n",
        "  R2 = (-b - math.sqrt(C) / (2 * a));\n",
        "  print (\"Raíz 1:\", R1, \"Raíz 2:\", R2);\n",
        "else:\n",
        "  if C == 0:\n",
        "    R1 = (-b - math.sqrt(C) / (2 * a));\n",
        "    print (\"A raíz é:\", R1)\n",
        "  else:\n",
        "    print (\"Não possui raíz real\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5W2R8Y_vEnZ9",
        "outputId": "25fb74df-da0a-43b0-b85a-84f6a602cabb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a: 1\n",
            "Digite b: -4\n",
            "Digite C: 4\n",
            "A raíz é: 4.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "21 - média aritmética"
      ],
      "metadata": {
        "id": "QZXbgVfyFufc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1, n2, n3, n4 = int(input(\"Digite a 1° nota: \")), int(input(\"Digite a 2° nota: \")), int(input(\"Digite a 3° nota: \")), int(input(\"Digite a 4° nota: \"));\n",
        "\n",
        "Ma = ((n1 + n2 + n3 + n4) / 4);\n",
        "if (Ma >= 6):\n",
        "  print(\"Aprovado\");\n",
        "else:\n",
        "    if (Ma >= 3):\n",
        "      print(\"Exame\");\n",
        "    else:\n",
        "      print(\"Reprovado\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1sji2dYaFtBE",
        "outputId": "609226b5-8846-4088-c94f-d9560ad1aab2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a 1° nota: 5\n",
            "Digite a 2° nota: 5\n",
            "Digite a 3° nota: 5\n",
            "Digite a 4° nota: 5\n",
            "Exame\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "22 - Ordem crescente"
      ],
      "metadata": {
        "id": "_cj43bVlIapH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = int(input(\"Digite um valor: \")), int(input(\"Digite outro valor: \"));\n",
        "\n",
        "if (x > y):\n",
        "  print(\"A ordem crescente é:\", y, \"e\", x);\n",
        "else:\n",
        "  print(\"A ordem crescente é:\", x, \"e\", y);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RmkmO4iKIfeA",
        "outputId": "49aa4df5-2b40-4b03-c5d3-f053219a2f9f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor: 15\n",
            "Digite outro valor: 6\n",
            "A ordem crescente é: 6 e 15\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "23 - 4 números em ordem crescente"
      ],
      "metadata": {
        "id": "IZ5yy-P_Jfq1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a, b = int(input(\"Digite em ordem crescente o 1° número: \")), int(input(\" o 2° número: \"));\n",
        "c, x = int(input(\" o 3° número: \")), int(input(\"O 4° número não precisa estar na ordem: \"));\n",
        "\n",
        "if (x > c):\n",
        "  print(\"A ordem crescente é:\", a, b, c, x);\n",
        "else:\n",
        "  if (x > b):\n",
        "    print(\"A ordem crescente é:\", a, b, x, c);\n",
        "  else:\n",
        "    if (x > a):\n",
        "      print(\"A ordem crescente é:\", a, x, b, c);\n",
        "    else:\n",
        "      print(\"A ordem crescente é:\", x, a, b, c);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FePBWq0wJnv-",
        "outputId": "8daa1b23-1c0f-4daa-a0aa-f4e6db3c4161"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite em ordem crescente o 1° número: 1\n",
            " o 2° número: 2\n",
            " o 3° número: 4\n",
            "O 4° número não precisa estar na ordem: 3\n",
            "A ordem crescente é: 1 2 3 4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "24 - é divisível por 2 e 3?"
      ],
      "metadata": {
        "id": "iL-1t6lAL-02"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = int(input(\"Digite um valor: \"));\n",
        "\n",
        "if (X%3 + X%2 ==0):\n",
        "  print(\"É divisível por 2 e 3\");\n",
        "else:\n",
        "  print(\"Não é divisível por 2 e 3\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uxxQaI7ZMd-8",
        "outputId": "eabdb7b2-aa1e-4f59-a1ab-9dfb21bcc69a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor: 2\n",
            "Não é divisível por 2 e 3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "25 - horas do jogo"
      ],
      "metadata": {
        "id": "heBpmLNCPe-V"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Hc, Mc, Hf, Mf = int(input(\"Inicio do jogo, Digite as horas: \")), int(input(\"e os minutos: \")), int(input(\"Fim do jogo, Digite as horas: \")), int(input(\"e os minutos: \"));\n",
        "\n",
        "if (Hc > Hf):\n",
        "  Hf = Hf + 24;\n",
        "\n",
        "Hr = Hf - Hc\n",
        "\n",
        "if (Mc > Mf):\n",
        "  Mf = Mf + 60;\n",
        "\n",
        "Min = Mf - Mc\n",
        "\n",
        "print(\"O jogo durou:\", Hr, \"horas e\", Min, \"minutos\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wBDxQiFEPnVn",
        "outputId": "abf9ced6-3704-457e-b5a2-e418185b74fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Inicio do jogo, Digite as horas: 13\n",
            "e os minutos: 20\n",
            "Fim do jogo, Digite as horas: 12\n",
            "e os minutos: 30\n",
            "O jogo durou: 23 horas e 10 minutos\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "26 - Verifique se o maior número é múltiplo do menor"
      ],
      "metadata": {
        "id": "6Rg252o0YS1t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x, y = int(input(\"Digite um valor: \")), int(input(\"Digite outro valor: \"));\n",
        "\n",
        "if (x > y):\n",
        "  if (x%y == 0):\n",
        "    c = (x / y);\n",
        "    print (\"O maior número é multiplo do menor, pois,\", x, \"/\", y, \"=\", c)\n",
        "  else:\n",
        "    print (\"Não é múltiplo\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LoV9-nucYSW1",
        "outputId": "4a715de1-968b-4a03-9f92-9ba71f6c7b68"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor: 15\n",
            "Digite outro valor: 2\n",
            "Não é múltiplo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "27 - velocidade média em km/h no circuito"
      ],
      "metadata": {
        "id": "DpUBBz1-bN8K"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Nv = int(input(\"Digite o número de voltas no circuito: \"));\n",
        "Ec = int(input(\"Digite a extensão do circuito em metros: \"));\n",
        "Td = int(input(\"Digite a duração em minutos \"));\n",
        "\n",
        "C = (((Nv * Ec) / 1000) / (Td / 60));\n",
        "print(\"A velocidade média é de:\", C, \"Km/h\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_3U2Tq5obW0S",
        "outputId": "94741f0a-e183-4abe-e920-8f160142b06b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o número de voltas no circuito: 10\n",
            "Digite a extensão do circuito em metros: 1000\n",
            "Digite a duração em minutos 10\n",
            "A velocidade média é de: 60.0 Km/h\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "28 - Calcule o Novo Preço"
      ],
      "metadata": {
        "id": "aFloBqMwLwh6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Pa, Vm = float(input(\"Informe o preço atual do produto: \")), float(input(\"informe a média de vendas mensais: \"));\n",
        "\n",
        "if (Pa < 30) and (Vm < 500):\n",
        "  Pn = (Pa * 1.10);\n",
        "  print(\"O novo preço será:\", Pn);\n",
        "else:\n",
        "  if (Pa < 80) and (Vm < 1000):\n",
        "    Pn = (Pa * 1.15);\n",
        "    print(\"O novo preço será:\", Pn);\n",
        "  else:\n",
        "    if (Pa >= 80) and (Vm >= 1000):\n",
        "      Pn = (Pa - (Pa * 0.05));\n",
        "      print(\"O novo preço será:\", Pn);\n",
        "    else:\n",
        "      print(\"O preço continuará sendo:\", Pa);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dklbE9CllzsX",
        "outputId": "e94ab454-28bf-4f08-a715-6afc389055e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Informe o preço atual do produto: 100\n",
            "informe a média de vendas mensais: 500\n",
            "O novo preço será: 100.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "29 - Investimento poupança e renda fixa"
      ],
      "metadata": {
        "id": "WOmJPww8rECC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "inv = int(input(\"Se o investimento for na poupança (Digite 1), se o investimento for na renda fixa (Digite 2): \"));\n",
        "Vi = float(input(\"Informe o valor investido: \"))\n",
        "\n",
        "if (inv == 1):\n",
        "  P = (Vi * 1.03);\n",
        "  print(\"O valor obtido será de:\", P, \"reais em 1 mês\");\n",
        "else:\n",
        "   if (inv == 2):\n",
        "      Rf = (Vi * 1.05);\n",
        "      print(\"O valor obtido será de:\", Rf, \"reais em 1 mês\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lt1hf5lmrcG5",
        "outputId": "8f1f13dc-37f2-42f2-f22f-64e0f5a5d7f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Se o investimento for na poupança (Digite 1), se o investimento for na renda fixa (Digite 2): 2\n",
            "Informe o valor investido: 100\n",
            "O valor obtido será de: 105.0 reais em 1 mês\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "31 - quadrado dos números entre 10 e 150"
      ],
      "metadata": {
        "id": "sbP1ZYHm1Sed"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num = 10\n",
        "\n",
        "while (num <= 150):\n",
        "  p = (num ** 2);\n",
        "  num += 1;\n",
        "  print(p);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YKCwuP2o1coX",
        "outputId": "2a754e4f-d593-426f-c491-ce00a03bb22d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n",
            "121\n",
            "144\n",
            "169\n",
            "196\n",
            "225\n",
            "256\n",
            "289\n",
            "324\n",
            "361\n",
            "400\n",
            "441\n",
            "484\n",
            "529\n",
            "576\n",
            "625\n",
            "676\n",
            "729\n",
            "784\n",
            "841\n",
            "900\n",
            "961\n",
            "1024\n",
            "1089\n",
            "1156\n",
            "1225\n",
            "1296\n",
            "1369\n",
            "1444\n",
            "1521\n",
            "1600\n",
            "1681\n",
            "1764\n",
            "1849\n",
            "1936\n",
            "2025\n",
            "2116\n",
            "2209\n",
            "2304\n",
            "2401\n",
            "2500\n",
            "2601\n",
            "2704\n",
            "2809\n",
            "2916\n",
            "3025\n",
            "3136\n",
            "3249\n",
            "3364\n",
            "3481\n",
            "3600\n",
            "3721\n",
            "3844\n",
            "3969\n",
            "4096\n",
            "4225\n",
            "4356\n",
            "4489\n",
            "4624\n",
            "4761\n",
            "4900\n",
            "5041\n",
            "5184\n",
            "5329\n",
            "5476\n",
            "5625\n",
            "5776\n",
            "5929\n",
            "6084\n",
            "6241\n",
            "6400\n",
            "6561\n",
            "6724\n",
            "6889\n",
            "7056\n",
            "7225\n",
            "7396\n",
            "7569\n",
            "7744\n",
            "7921\n",
            "8100\n",
            "8281\n",
            "8464\n",
            "8649\n",
            "8836\n",
            "9025\n",
            "9216\n",
            "9409\n",
            "9604\n",
            "9801\n",
            "10000\n",
            "10201\n",
            "10404\n",
            "10609\n",
            "10816\n",
            "11025\n",
            "11236\n",
            "11449\n",
            "11664\n",
            "11881\n",
            "12100\n",
            "12321\n",
            "12544\n",
            "12769\n",
            "12996\n",
            "13225\n",
            "13456\n",
            "13689\n",
            "13924\n",
            "14161\n",
            "14400\n",
            "14641\n",
            "14884\n",
            "15129\n",
            "15376\n",
            "15625\n",
            "15876\n",
            "16129\n",
            "16384\n",
            "16641\n",
            "16900\n",
            "17161\n",
            "17424\n",
            "17689\n",
            "17956\n",
            "18225\n",
            "18496\n",
            "18769\n",
            "19044\n",
            "19321\n",
            "19600\n",
            "19881\n",
            "20164\n",
            "20449\n",
            "20736\n",
            "21025\n",
            "21316\n",
            "21609\n",
            "21904\n",
            "22201\n",
            "22500\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "32 - fatorial de número inteiro"
      ],
      "metadata": {
        "id": "h7It_xHg2x3J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Num = int(input(\"Digite um número inteiro: \"));\n",
        "Fat = 1;\n",
        "cont = 1;\n",
        "\n",
        "while (c <= Num):\n",
        "  Fat *= c;\n",
        "  cont += 1;\n",
        "print(\"O fatorial de\", Num,\"é:\", Fat);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bwaYEVn13dZq",
        "outputId": "72cd29f2-390f-4040-c9c9-c5e78cf208fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro: 5\n",
            "O fatorial de 5 é: 120\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "33 - Série de divisões do número"
      ],
      "metadata": {
        "id": "9nlTsYoj-POx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Num = float(input(\"Digite um número: \"));\n",
        "cont = 1;\n",
        "div = 0;\n",
        "\n",
        "while (cont <= Num):\n",
        "  print(\"1 /\", cont)\n",
        "  div = div + 1 / cont;\n",
        "  cont += 1;\n",
        "print(\"\\nA soma da série 1 / 1 ... 1 /\", Num, \"é:\",div)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FVXYA0uu-b9U",
        "outputId": "3b2fb698-060b-4910-bb20-712631355df9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 5\n",
            "1 / 1\n",
            "1 / 2\n",
            "1 / 3\n",
            "1 / 4\n",
            "1 / 5\n",
            "\n",
            "A soma da série 1 / 1 ... 1 / 5.0 é: 2.283333333333333\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "34 - Tábuada de um número"
      ],
      "metadata": {
        "id": "uTF2jJ72DRKw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Num = float(input(\"Digite um número: \"));\n",
        "div = 1\n",
        "\n",
        "while (div <= 10):\n",
        "  result = (Num * div);\n",
        "  div += 1;\n",
        "  print(result);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TgY1aBDyDWnI",
        "outputId": "583377ee-711c-4158-b5d8-c4fb27f4a943"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 10\n",
            "10.0\n",
            "20.0\n",
            "30.0\n",
            "40.0\n",
            "50.0\n",
            "60.0\n",
            "70.0\n",
            "80.0\n",
            "90.0\n",
            "100.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nv, Ec, Td = int(input(\"Digite\"))"
      ],
      "metadata": {
        "id": "sd-Jfm0dbpOC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "35 - soma dos valores entre os números"
      ],
      "metadata": {
        "id": "0KhZ4WaUJTVT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num1, num2 = int(input(\"Digite um número inteiro: \")), int(input(\"Digite um número inteiro: \"));\n",
        "soma = 0\n",
        "if(num1 > num2):\n",
        "  print(\"\\nO maior número é:\", num1);\n",
        "  print(\"Os números ímpares entre eles são:\");\n",
        "  while(num2 < num1):\n",
        "    num2 += 1;\n",
        "    if (num2%2 != 0):\n",
        "      print(num2);\n",
        "      soma = num2 + soma;\n",
        "  print(\"A soma é:\", soma);\n",
        "else:\n",
        "  if(num2 > num1):\n",
        "    print(\"\\nO maior número é:\", num2);\n",
        "    print(\"Os números ímpares entre eles são:\");\n",
        "    while(num1 < num2):\n",
        "      num1 += 1\n",
        "      if (num1%2 != 0):\n",
        "        print(num1);\n",
        "        soma = num1 + soma;\n",
        "    print(\"A soma é:\",soma);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4FY-lDB7JiOl",
        "outputId": "ad679f1a-4499-4c90-f298-ec6c3a67dd4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro: 10\n",
            "Digite um número inteiro: 1\n",
            "\n",
            "O maior número é: 10\n",
            "Os números ímpares entre eles são:\n",
            "3\n",
            "5\n",
            "7\n",
            "9\n",
            "A soma é: 24\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "36 -  Calcule a série 1 + 1/1! + 1/2! + ... + 1/N!"
      ],
      "metadata": {
        "id": "OjTEQAyTRVnZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Num = float(input(\"Digite um número: \"));\n",
        "cont = 0;\n",
        "fat = 1;\n",
        "div = 0\n",
        "\n",
        "while (cont <= Num):\n",
        "  print(\"1 /\", fat);\n",
        "  div = div + 1 / fat;\n",
        "  cont += 1;\n",
        "  fat *= cont;\n",
        "print(\"\\nA soma da série 1 / 1! ... 1 /\", Num,\"!, é:\", div);\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lH7jQAT_RfPs",
        "outputId": "0fd0fb2c-401b-4a37-e154-6b5698d5be3b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 5\n",
            "1 / 1\n",
            "1 / 1\n",
            "1 / 2\n",
            "1 / 6\n",
            "1 / 24\n",
            "1 / 120\n",
            "\n",
            "A soma da série 1 / 1! ... 1 / 5.0 !, é: 2.7166666666666663\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "37 - série de Fibonacci"
      ],
      "metadata": {
        "id": "jxrW2vNJM7Kr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num = int(input(\"Digite um número inteiro: \"));\n",
        "cont = 1;\n",
        "result = 0;\n",
        "limit = num;\n",
        "OldN = 0;\n",
        "\n",
        "while (limit >= cont):\n",
        "    print(OldN, end = \" \");\n",
        "\n",
        "    result = num + OldN;\n",
        "    OldN = num;\n",
        "    num = result;\n",
        "    cont += 1;"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WDZkyUFtM-oh",
        "outputId": "a58e3f07-eea6-44ff-b76f-b944338fcedf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro: 10\n",
            "0 10 10 20 30 50 80 130 210 340 "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "38 - Maior e Menor valor"
      ],
      "metadata": {
        "id": "SWO4csMPHhnJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for c in range(100):\n",
        "  n = int(input(\"Digite um valor:\\n\"))\n",
        "  if (c == 0):\n",
        "    Nmaior = n;\n",
        "    Nmenor = n;\n",
        "  else:\n",
        "    if n>Nmaior:\n",
        "      Nmaior = n;\n",
        "    else:\n",
        "      if n<Nmenor:\n",
        "        Nmenor = n;\n",
        "print(\"\\nO maior número é:\", Nmaior, \"\\nO menor número é:\", Nmenor);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WKYnIvp7H0dk",
        "outputId": "25e24483-4e1e-4540-e13c-104421feedfd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um valor:\n",
            "12\n",
            "Digite um valor:\n",
            "21\n",
            "Digite um valor:\n",
            "243\n",
            "Digite um valor:\n",
            "654\n",
            "Digite um valor:\n",
            "67\n",
            "Digite um valor:\n",
            "2\n",
            "Digite um valor:\n",
            "1\n",
            "Digite um valor:\n",
            "6\n",
            "Digite um valor:\n",
            "45\n",
            "Digite um valor:\n",
            "6\n",
            "\n",
            "O maior número é: 654 \n",
            "O menor número é: 1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "39 - grãos"
      ],
      "metadata": {
        "id": "IuAkwtB7HsmF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "g = 1;\n",
        "casa = 1;\n",
        "calc = 0;\n",
        "\n",
        "while (casa <= 64):\n",
        "  casa += 1;\n",
        "  g += g;\n",
        "  calc = g + calc;\n",
        "  print(g)\n",
        "print(\"\\nA soma é:\", calc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xXEBbGcbHonL",
        "outputId": "bec6a01d-654f-43db-a461-6cfc6610d398"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "4\n",
            "8\n",
            "16\n",
            "32\n",
            "64\n",
            "128\n",
            "256\n",
            "512\n",
            "1024\n",
            "2048\n",
            "4096\n",
            "8192\n",
            "16384\n",
            "32768\n",
            "65536\n",
            "131072\n",
            "262144\n",
            "524288\n",
            "1048576\n",
            "2097152\n",
            "4194304\n",
            "8388608\n",
            "16777216\n",
            "33554432\n",
            "67108864\n",
            "134217728\n",
            "268435456\n",
            "536870912\n",
            "1073741824\n",
            "2147483648\n",
            "4294967296\n",
            "8589934592\n",
            "17179869184\n",
            "34359738368\n",
            "68719476736\n",
            "137438953472\n",
            "274877906944\n",
            "549755813888\n",
            "1099511627776\n",
            "2199023255552\n",
            "4398046511104\n",
            "8796093022208\n",
            "17592186044416\n",
            "35184372088832\n",
            "70368744177664\n",
            "140737488355328\n",
            "281474976710656\n",
            "562949953421312\n",
            "1125899906842624\n",
            "2251799813685248\n",
            "4503599627370496\n",
            "9007199254740992\n",
            "18014398509481984\n",
            "36028797018963968\n",
            "72057594037927936\n",
            "144115188075855872\n",
            "288230376151711744\n",
            "576460752303423488\n",
            "1152921504606846976\n",
            "2305843009213693952\n",
            "4611686018427387904\n",
            "9223372036854775808\n",
            "18446744073709551616\n",
            "\n",
            "A soma é: 36893488147419103230\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "40 - números primos"
      ],
      "metadata": {
        "id": "bEK6-6-FKtah"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n1, n2 = int(input(\"Digite um número: \")), int(input(\"Digite outro número: \"));\n",
        "\n",
        "# if (n1 > n2):\n",
        "#   while (n2 < n1):\n",
        "#     n2 += 1;\n",
        "#     if (n2%n2 != 1 and n2%2 ):\n",
        "#       print(n2);\n",
        "\n",
        "if i (2, int(n1**0.5) + 1):\n",
        "  print(\"\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5ACx-O0CLBLn",
        "outputId": "95584273-1240-427f-b835-41c5444baa48"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 10\n",
            "Digite outro número: 1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "41 - dados = 7"
      ],
      "metadata": {
        "id": "Ig9XQj5Ilaar"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d1 = 7;\n",
        "d2 = 0;\n",
        "\n",
        "while (d1 >= d2 or d2 < 6):\n",
        "  d1 -= 1;\n",
        "  d2 += 1;\n",
        "  soma = d1 + d2\n",
        "  if (soma == 7):\n",
        "    print(d1, d2);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_YCgM-oPwU27",
        "outputId": "d1c11e44-f2c5-48ca-f067-3f14856b5f14"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6 1\n",
            "5 2\n",
            "4 3\n",
            "3 4\n",
            "2 5\n",
            "1 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "42 - Calcule e mostre a série 1 + 2/3 + 3/5 + ... + 50/99"
      ],
      "metadata": {
        "id": "Hi8I3VsBwZJG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "div = 1;\n",
        "cont = 0;\n",
        "result = 0;\n",
        "\n",
        "while (cont < 49):\n",
        "  cont += 1;\n",
        "  calc = cont / div;\n",
        "  print(cont, \"/\", div)\n",
        "  div += 2;\n",
        "  result = result + calc;\n",
        "\n",
        "print(\"\\nA soma da série 1 / 1 ... 50 /\", div, \"é:\",result)"
      ],
      "metadata": {
        "id": "5ZFPdNAPwdTQ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6952870f-363d-43f0-a19b-92598c6259b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 / 1\n",
            "2 / 3\n",
            "3 / 5\n",
            "4 / 7\n",
            "5 / 9\n",
            "6 / 11\n",
            "7 / 13\n",
            "8 / 15\n",
            "9 / 17\n",
            "10 / 19\n",
            "11 / 21\n",
            "12 / 23\n",
            "13 / 25\n",
            "14 / 27\n",
            "15 / 29\n",
            "16 / 31\n",
            "17 / 33\n",
            "18 / 35\n",
            "19 / 37\n",
            "20 / 39\n",
            "21 / 41\n",
            "22 / 43\n",
            "23 / 45\n",
            "24 / 47\n",
            "25 / 49\n",
            "26 / 51\n",
            "27 / 53\n",
            "28 / 55\n",
            "29 / 57\n",
            "30 / 59\n",
            "31 / 61\n",
            "32 / 63\n",
            "33 / 65\n",
            "34 / 67\n",
            "35 / 69\n",
            "36 / 71\n",
            "37 / 73\n",
            "38 / 75\n",
            "39 / 77\n",
            "40 / 79\n",
            "41 / 81\n",
            "42 / 83\n",
            "43 / 85\n",
            "44 / 87\n",
            "45 / 89\n",
            "46 / 91\n",
            "47 / 93\n",
            "48 / 95\n",
            "49 / 97\n",
            "\n",
            "A soma da série 1 / 1 ... 50 / 99 é: 25.963836919186946\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "43 - Ana maior q maria"
      ],
      "metadata": {
        "id": "Lb9_pLTvN4aA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ana = 1.10\n",
        "maria = 1.50\n",
        "ano = 0\n",
        "\n",
        "while(ana < maria):\n",
        "    ana = ana + 0.03\n",
        "    maria = maria + 0.02\n",
        "    ano = ano + 1\n",
        "\n",
        "print(\"\\nLevará:\", ano, \"anos, para Ana se tornar maior que Maria\")\n",
        "\n"
      ],
      "metadata": {
        "id": "aCvL7obOPAG0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eeb38e2f-b69a-458c-9257-608437c58f5c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Levará: 41 para Ana se tornar maior que Maria\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "44 - Calcule e mostre o valor da potência.\n"
      ],
      "metadata": {
        "id": "csFz_mR7HAhN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "b, e = n2 = int(input(\"Digite a base: \")), int(input(\"Digite o expoente: \"));\n",
        "cont = 0;\n",
        "result = 1;\n",
        "\n",
        "while(cont < e):\n",
        "  result = result * b;\n",
        "  cont = cont + 1;\n",
        "print(result);\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BC2o5oo4IVzF",
        "outputId": "420df8c9-d2a1-4141-a8af-6434e7ae994b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a base: 2\n",
            "Digite o expoente: 5\n",
            "32\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "45 - Calcule e mostre a série 1 – 2/4 + 3/9 – 4/16 + 5/25 + ... + 15/225"
      ],
      "metadata": {
        "id": "DWaFwGuOc4YN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "div = 1;\n",
        "result = 0;\n",
        "\n",
        "for cont in range(1, 16):\n",
        "  div = cont * cont;\n",
        "  if (cont%2 ==0):\n",
        "    result = result - (cont / div);\n",
        "  else:\n",
        "    result = result + (cont / div);\n",
        "\n",
        "print(\"\\nA soma da série 1 / 1 ... 15 /\", div, \"é:\",result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_ThHuP2Pc46e",
        "outputId": "e0aa6d43-ec1d-4f0b-859d-58099ab72693"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "A soma da série 1 / 1 ... 15 / 225 é: -0.005494505494505503\n"
          ]
        }
      ]
    }
  ]
}